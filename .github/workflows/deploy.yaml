name: Deploy para AWS EC2

on:
  push:
    branches:
      - deploy
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Testar conexÃ£o SSH
      - name: Testar conexÃ£o SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "âœ… ConexÃ£o SSH bem-sucedida!"
            docker --version

      # Passo 2: Checkout do cÃ³digo
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4

      # Passo 3: Build da imagem Docker
      - name: Preparar arquivos da imagem
        run: |
          tar -cf $GITHUB_WORKSPACE/car-truck-api.tar models/ static/ src/ main.py Dockerfile requirements.txt

      # Passo 4: Transferir a imagem para a EC2
      - name: Transferir a imagem para a EC2
        run: |
          echo "Transferindo o arquivo para a EC2..."
          
          # Criar diretÃ³rio .ssh se nÃ£o existir
          mkdir -p ~/.ssh
          
          # Adicionar chave do host ao known_hosts (ignorar erro se o arquivo nÃ£o existir inicialmente)
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts 2>/dev/null || true
          
          # Criar arquivo temporÃ¡rio com a chave SSH
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/ssh_key.pem
          chmod 600 /tmp/ssh_key.pem
          
          # Transferir o arquivo usando SCP
          scp -i /tmp/ssh_key.pem $GITHUB_WORKSPACE/car-truck-api.tar ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/
          
          # Limpeza
          rm /tmp/ssh_key.pem

      # Passo 5: Implantar na EC2
      - name: Implantar na EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Gerenciar container
            docker stop car-truck-container || true
            docker rm car-truck-container || true
            docker rmi car-truck-api || true
            
            # Descompactar arquivos imagem
            tar -xf /home/ubuntu/car-truck-api.tar

            # Buildar imagem
            docker build -t car-truck-api .

            # Executar imagem
            docker run -d -p 80:80 --name car-truck-container car-truck-api
            rm /home/ubuntu/car-truck-api.tar

            echo "ðŸš€ ImplantaÃ§Ã£o concluÃ­da com sucesso!"