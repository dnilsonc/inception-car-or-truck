name: Deploy para AWS EC2 (Simplificado)

on:
  push:
    branches:
      - deploy
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Testar a conexão SSH com a EC2
      - name: Testar conexão SSH com a EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Conexão SSH bem-sucedida!"
            whoami
            docker --version

      # Passo 2: Checkout do código
      - name: Checkout do código
        uses: actions/checkout@v4

      # Passo 3: Build da imagem Docker com depuração
      - name: Build da Imagem Docker
        run: |
          echo "Diretório atual: $PWD"
          echo "Conteúdo de $GITHUB_WORKSPACE:"
          ls -la $GITHUB_WORKSPACE
          docker build -t car-truck-api .
          docker save car-truck-api -o $GITHUB_WORKSPACE/car-truck-api.tar
          echo "Após salvar a imagem, conteúdo de $GITHUB_WORKSPACE:"
          ls -la $GITHUB_WORKSPACE

      # Passo 4: Transferir a imagem para a EC2 usando scp no runner
      - name: Transferir a imagem para a EC2
        run: |
          echo "Transferindo o arquivo para a EC2..."
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem $GITHUB_WORKSPACE/car-truck-api.tar ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/
          rm private_key.pem

      # Passo 5: Atualizar o container na EC2
      - name: Atualizar o container na EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker stop car-truck-container || true
            docker rm car-truck-container || true
            docker load -i /home/ubuntu/car-truck-api.tar
            docker run -d -p 80:80 --name car-truck-container car-truck-api